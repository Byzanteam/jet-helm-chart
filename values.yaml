# Default values for jet-helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

replicaCount: 1

projectMan:
  image:
    repository: jet
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    name: jet
    type: ClusterIP
    port: 80

registry: registry.cn-hangzhou.aliyuncs.com
imagePullSecret:
  existImageSecrets: ""
  imageCredentials: {}
    # username: deploy-man@skylark
    # password: changeit
    # email: dev@byzan.team

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}
tolerations: []
affinity: {}

# Jet environment variable
env:
  RELEASE_NODE: sname
  RELEASE_COOKIE: cookie
  CREDENTIAL_SECRET: gBgN6F4183LXKFbiE59K/zq+VuX1m3x2cf1lry+TEdflE3i4IjUYGObOlmyKm2Op
  PROJECT_MAN_DATABASE_URL: ecto://postgres:postgres@project_man_postgres/postgres
  DYNAMIC_REPO_HOSTNAME: dynamic_postgres
  DYNAMIC_REPO_USERNAME: postgres
  DYNAMIC_REPO_PASSWORD: postgres
  DYNAMIC_REPO_DATABASE: postgres
  DYNAMIC_REPO_EXPOSED_HOSTNAME: dynamic_postgres
  DYNAMIC_REPO_EXPOSED_PORT: 5432
  BREEZE_GRPC_ADDRESS: breeze:50052
  PROJECT_MAN_GRPC_SERVER_PORT: 50051
  JET_API_ENDPOINT: http://jet/api/plugin
  JET_JWT_PRIVATE_KEY: ""
  SECRET_KEY_BASE: Sl7ym/kDmxL7mcZzkY7S/zLEP9Ybkp4aqTnE/BoHQfsGAwnKqQaKfyzWPs4pAebU

# Jet ingress route
jetHosts: []
  # - localhost
  # - jet.work
jetTLS: {}
  # Certificate challenge field
  # certResolver: jet
  #
  # Custom tls certificate
  # tlsSecret: {}
    # certificate: base64 encoding certificate-file
    # key: base64 encoding key-file

# ingress middlewares
middlewares:
  jetSubpath: ""
  corsSettings: {}
    # accessControlAllowHeaders:
    #   - '*'
    # accessControlAllowMethods:
    #   - GET
    #   - OPTIONS
    #   - PUT
    # accessControlAllowOriginList:
    #   - '*'
    # accessControlMaxAge: "100"

backup: {}
  # veleroSchedule: "0 1 * * *"
  # includeNamespaces:
  #   - production
  # selector:
  #   app.kubernetes.io/instance: postgresql
  # storageLocation: ""
  # ttl: "720h0m0s"

breeze:
  image:
    repository: jet
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    name: breeze
    type: ClusterIP
    port: 50052
